/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2025 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

void delay(void)
{
	for(uint32_t i = 0; i < 500000; i++);
}

int main(void)

{
	uint32_t *pClkCtrlReg = (uint32_t*)0x40023830;
	uint32_t *pPortDModeReg = (uint32_t*)0x40020C00;
	uint32_t *pPortOutReg = (uint32_t*)0x40020C14;

	// 1. Enable the clock GPIOD peripheral in the AHB1ENR (3rd bit)
/*
    uint32_t temp = *pClkCtrlReg; // Read operation
    temp = temp | 0x08 // modify
    *pClkCtrlReg = temp; // write back

    *pClkCtrlReg =*pClkCtrlReg | 0x08; // same as above three lines
*/
	*pClkCtrlReg |= 0x08; //same as above but simpler


	// 2. Configure the mode for the IO pin as output

	// CLEARING 24 and 25:
	// Set mask value, aiming to make all other values except 24, 25 = 1
	// 1111 1100 1111 1111 1111 1111 1111 1111 = 0xFCFFFFFF
	*pPortDModeReg &= 0xFCFFFFFF;

	//SETTING 24 bit as 1
	// 0000 0001 0000 0000 0000 0000 0000 0000 = 0x01000000
	*pPortDModeReg |= 0x01000000;

	// 3. Set 12th bit of the output data reg to make I/O pint-12 as HIGH
	// Set mask value 0x1000
	*pPortOutReg |= 0x1000;

	while(1)
		{
			*pPortOutReg ^= 0x1000; // Toggle pin 12
			delay();
		}
}
